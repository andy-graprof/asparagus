
set timeout 1

proc pass_step { str } {
  
  if { [ info exists ::env(VERBOSE) ] } {
    send_user "$str\n"
    pass "$str"
  } else {
    send_user "."
    pass "."
  }

}

proc fail_step { str } {
  
  global test_name

  if { [ info exists ::env(VERBOSE) ] } {
    fail "$test_name : $str"
  } else {
    send_user "\n"
    fail "$test_name : $str"
  }

}

proc fail_fatal { str } {
  
  global test_name

  send_user " !!!! FATAL : $test_name : [string range \"$str\" 0 60]...'\n"
  exit 1

}

proc given { args } {

  if { [string equal -length [string length "an executable "] "$args" "an executable "] } {
    given_an_executable {*}[string range "$args" [string length "an executable "] [string length "$args"]]
  } else {
    fail_step "syntax error near `$args'"
    return
  }

}

proc given_an_executable { exe args } {

  pass_step "Given an executable `$exe'"
  dispatch_statement "$exe" 0 {*}"$args"

}

proc dispatch_statement { exe pid args } {
  
  if { [string length "$args"] == 0 } {
    return
  } elseif { [string equal -length [string length "when I run with parameters "] "$args" "when I run with parameters "] } {
    when_I_run_with_parameters "$exe" $pid {*}[string range "$args" [string length "when I run with parameters "] [string length "$args"]]
  } elseif { [string equal -length [string length "when I run "] "$args" "when I run "] } {
    when_I_run "$exe" $pid {*}[string range "$args" [string length "when I run "] [string length "$args"]]
  } elseif { [string equal -length [string length "and I send "] "$args" "and I send "] } {
    and_I_send "$exe" $pid {*}[string range "$args" [string length "and I send "] [string length "$args"]]
  } elseif { [string equal -length [string length "then I should see "] "$args" "then I should see "] } {
    then_I_should_see "$exe" $pid {*}[string range "$args" [string length "then I should see "] [string length "$args"]]
  } elseif { [string equal -length [string length "then I should not see "] "$args" "then I should not see "] } {
    then_I_should_not_see "$exe" $pid {*}[string range "$args" [string length "then I should not see "] [string length "$args"]]
  } else {
    fail_fatal "syntax error near `$args'"
  }

}

proc when_I_run_with_parameters { exe pid parameters args } {

  spawn $exe $parameters

  pass_step "  When I run with parameters `$parameters'"

  dispatch_statement "$exe" $spawn_id {*}"$args"

}

proc when_I_run { exe pid args } {

  spawn $exe

  pass_step "  When I run"

  dispatch_statement "$exe" $spawn_id {*}"$args"

}

proc and_I_send { exe pid str args } {

  set spawn_id $pid
  send "$str"

  pass_step "  And I send `[ string trim $str ]'"

  dispatch_statement "$exe" $pid {*}"$args"

}

proc then_I_should_see { exe pid str args } {

  set spawn_id $pid
  expect {

    "$str" {
      pass_step "  Then I should see `$str'"
    }

    default {
      fail_step "  Then I should see `$str'"
      return
    }

  }

  
  dispatch_statement "$exe" $pid {*}"$args"

}

proc then_I_should_not_see { exe pid str args } {

  set spawn_id $pid
  expect {

    "$str" {
      fail_step "  Then I should not see `$str'"
      return
    }

    default {
      pass_step "  Then I should not see `$str'"
    }
  
  }

  dispatch_statement "$exe" $pid {*}"$args"

}
